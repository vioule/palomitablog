version: '3'
services:
  frontoffice:
    image: palomitablog_frontoffice
    container_name: palomitablog_frontoffice_development
    build:
      context: ../
      dockerfile: ./docker/frontoffice.dockerFile
    ports:
      - "8080:8080"
    command: npm run dev:frontoffice
    volumes:
      - "../frontoffice:/palomitablog/frontoffice"
    environment:
      - NODE_ENV=development
      - DATABASE_URI=mongodb://palomitablog:palomitablog@palomitablog_mongo_database:27017/?authSource=palomitablog
    networks:
      default:
        aliases:
          - palomitablog_frontoffice
    depends_on:
      - proxy
      - database
  backoffice:
    image: palomitablog_backoffice
    container_name: palomitablog_backoffice_development
    build:
      context: ../
      dockerfile: ./docker/backoffice.dockerFile
    ports:
      - "8081:8081"
    command: npm run dev:backoffice
    volumes:
      - "../backoffice:/palomitablog/backoffice"
    environment:
      - NODE_ENV=development
    networks:
      default:
        aliases:
          - palomitablog_backoffice
  proxy:
    image: palomitablog_nginx
    container_name: palomitablog_nginx_proxy
    build:
      context: ../
      dockerfile: ./docker/nginx.dockerFile
    ports:
      - "80:80"
      - "443:443"
  database:
    image: mongo
    container_name: palomitablog_mongo_database
    volumes:
      - "../mongo.setup.js:/docker-entrypoint-initdb.d/palomitablog.setup.js"
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    networks:
      default:
        aliases:
          - palomitablog_database
